<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns="http://www.springframework.org/schema/beans"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"
>
	<mvc:annotation-driven />
    <import resource="security-context.xml" />
	<context:annotation-config />

	<context:property-placeholder location="/WEB-INF/local.properties" ignore-unresolvable="true" />

	<context:property-placeholder location="/WEB-INF/servlet.properties" />

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="ru.todo100.activer.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<prop key="hibernate.cache.region.factory_class">
					org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- Classes for work of db tables -->

	<bean
		id="serviceAbstract"
		class="ru.todo100.activer.dao.AbstractDao"
		abstract="true" />

	<bean
		id="accountService"
		class="ru.todo100.activer.dao.AccountDao"
		parent="serviceAbstract" />

	<bean
		id="markService"
		class="ru.todo100.activer.dao.MarkDao"
		parent="serviceAbstract" />

	<bean id="iWantService"
		  class="ru.todo100.activer.dao.IWantDao"
		  parent="serviceAbstract"/>

	<bean id="countryDao"
		  class="ru.todo100.activer.dao.CountryDao"
		  parent="serviceAbstract"/>

	<bean id="tripDao"
		  class="ru.todo100.activer.dao.TripDao"
		  parent="serviceAbstract"/>

	<bean id="videoDao"
		  class="ru.todo100.activer.dao.VideoDao"
		  parent="serviceAbstract"/>

	<bean id="photoAlbumDao"
		  class="ru.todo100.activer.dao.PhotoAlbumDao"
		  parent="serviceAbstract"/>

	<bean id="partnerService" class="ru.todo100.activer.service.impl.PartnerServiceImpl"/>

	<bean id="adminAccountService" class="ru.todo100.activer.service.impl.AdminAccountServiceImpl"/>

	<bean id="photoService" class="ru.todo100.activer.dao.PhotoDao" parent="serviceAbstract"/>

	<bean id="messageService" class="ru.todo100.activer.dao.MessageDao" parent="serviceAbstract"/>

	<bean id="friendsService" class="ru.todo100.activer.service.impl.FriendsServiceImpl"/>
	<bean id="networkListCacheIDao" class="ru.todo100.activer.dao.NetworkListCacheIDao"/>


	<bean id="adminAccountListCacheDao" class="ru.todo100.activer.dao.AdminAccountListCacheDao"/>

	<bean id="giftDao" class="ru.todo100.activer.dao.GiftDao"/>


	<bean id="paymentDebitDaoDao" class="ru.todo100.activer.dao.PaymentDebitDao"/>
	<bean id="paymentService" class="ru.todo100.activer.service.impl.PaymentServiceImpl"/>

	<bean id="giftService" class="ru.todo100.activer.service.impl.GiftServiceImpl"/>

	<bean id="disputeThemeDao" class="ru.todo100.activer.dao.DisputeThemeDao"/>
	<bean id="disputeService" class="ru.todo100.activer.service.impl.DisputeServiceImpl"/>

	<bean
			id="promocodeService"
			class="ru.todo100.activer.service.impl.PromoServiceImpl"
			parent="serviceAbstract" />

	<!-- end classes -->

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.yandex.ru" />
		<property name="username" value="support@onoffline.ru" />
		<property name="password" value="123456" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.smtp.from">support@onoffline.ru</prop>
			</props>
		</property>
	</bean>

	<bean id="velocityEngine" class="ru.todo100.activer.velocity.Engine">
		<constructor-arg index="0" ref="servletContext"/>
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">webapp</prop>
				<prop key="webapp.resource.loader.class">org.apache.velocity.tools.view.WebappResourceLoader</prop>
			</props>
		</property>
	</bean>

	<bean id="mailService" class="ru.todo100.activer.util.MailService">
		<property name="mailSender" ref="mailSender" />
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<!-- Localization -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!--property name="basename" value="classpath*:WEB-INF.messages" /-->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="iWantPopulator" class="ru.todo100.activer.populators.IWantPopulator"/>

	<bean id="wallPopulator" class="ru.todo100.activer.populators.WallPopulator"/>

	<bean id="interestPopulator" class="ru.todo100.activer.populators.InterestPopulator"/>

	<bean id="profilePopulator" class="ru.todo100.activer.populators.ProfilePopulator"/>

	<bean id="messagePopulator" class="ru.todo100.activer.populators.ProfilePopulator"/>

	<bean id="tripPopulator" class="ru.todo100.activer.populators.TripPopulator"/>
	<bean id="dreamPopulator" class="ru.todo100.activer.populators.DreamPopulator"/>

	<bean id="educationPopulator" class="ru.todo100.activer.populators.EducationPopulator"/>
	<bean id="jobPopulator" class="ru.todo100.activer.populators.JobPopulator"/>
	<bean id="childrenPopulator" class="ru.todo100.activer.populators.ChildrenPopulator"/>



	<bean id="payPalAccountDao" class="ru.todo100.activer.dao.PayPalAccountDao"/>


	<bean id="photosDao" class="ru.todo100.activer.dao.PhotosDao"/>

	<bean id="markRelationService" class="ru.todo100.activer.dao.MarkRelationDao"/>

	<bean id="markFacade" class="ru.todo100.activer.facade.MarkFacade"/>

	<bean id="wallService" class="ru.todo100.activer.dao.WallDao"/>

	<bean id="photoStrategy" class="ru.todo100.activer.strategy.PhotoStrategy">
		<property name="pathToSave" value="/resources/photos"/>
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<bean id="referService" class="ru.todo100.activer.service.impl.ReferServiceImpl"/>

	<bean id="settingService" class="ru.todo100.activer.dao.SettingDao"/>

	<bean id="photoService1" class="ru.todo100.activer.service.impl.PhotoServiceImpl"/>

	<bean id="friendDao" class="ru.todo100.activer.dao.FriendDao"/>

	<!-- Facades -->
	<import resource="facade-context.xml" />
</beans>